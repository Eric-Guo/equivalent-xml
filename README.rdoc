= equivalent-xml

== Description

=== Problem
Testing XML output is difficult:
* Comparing text output is brittle due to the vagaries of serialization.
* Attribute order doesn't matter.
* Element order matters sometimes, but not always. 
* Text needs to be normalized, but CDATA doesn't.
* Nodes in the same namespace don't always use the same prefix
* Etc.

=== Solution
EquivalentXml for Nokogiri

=== Use
+EquivalentXml.equivalent?(_node_1_, _node_2_, opts = { :element_order => false })+

_node_1_ and _node_2_ can be any Nokogiri::XML::Node descendants. The most common
use is to compare two Nokogiri::XML::Document instances.

_node_1_ is equivalent to _node_2_ if and only if:
* _node_1_ and _node_2_ are of the same class
* _node_1_ and _node_2_ are in the same namespace
* _node_1_ and _node_2_ have the same number of child nodes
  (excluding ProcessingInstructions, Comments and empty Text nodes)
* For each child of _node_1_, there is exactly one equal child of _node_2_
* If called with :element_order => true, equivalent child elements must be
  in the same relative position in order to be considered equal

+Element+ nodes are equivalent if they have the same name, and their 
child nodesets are equal (as defined above)

+Attribute+ nodes are equivalent if their names and values match exactly

+CDATA+ nodes are equivalent if their text strings match exactly,
including leading, trailing, and internal whitespace

Non-CDATA +CharacterData+ nodes are equivalent if their text strings 
match after stripping leading and trailing whitespace and collapsing 
internal whitespace to a single space

+Document+ nodes are equivalent if their root nodes are equal

+ProcessingInstruction+ and +Comment+ nodes are ignored

== Contributing to equivalent-xml
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Michael B. Klein. See LICENSE.txt for
further details.

